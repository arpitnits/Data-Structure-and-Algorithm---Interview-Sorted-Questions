https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

//Time Complexity - O(n)
//Space Complexity - O(n)

    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        stack<TreeNode*> s1,s2;
        vector<vector<int>> ans;
        
        if(root)    s1.push(root);
        while(!s1.empty() || !s2.empty())
        {
            vector<int> curr_node;
            while(!s1.empty())
            {
                TreeNode *temp = s1.top();
                s1.pop();
                
                if(temp->left)  s2.push(temp->left);
                if(temp->right) s2.push(temp->right);
                
                curr_node.push_back(temp->val);
            }
            
            if(!curr_node.empty()) ans.push_back(curr_node);
            curr_node.clear();
            while(!s2.empty())
            {
                
                TreeNode *temp = s2.top();
                s2.pop();
                
                if(temp->right) s1.push(temp->right);
                if(temp->left)  s1.push(temp->left);
                
                
                curr_node.push_back(temp->val);
            }
            
            if(!curr_node.empty()) ans.push_back(curr_node);
        }
        return ans;
    }
