Question Link - https://leetcode.com/problems/longest-increasing-subsequence

//Time Complexity - O(n2)

int lengthOfLIS(vector<int>& nums) 
    {
        int n = nums.size();
        int dp[n], ans=1;
        dp[0]=1;
        
        for(int i=1;i<n;i++)
        {
            dp[i]=1;
            for(int j=0;j<i;j++)
            {
                if(nums[i]>nums[j] and dp[i]<dp[j]+1)
                    dp[i]=  dp[j]+1;
            }
            ans=max(dp[i],ans);
        }
        return ans;
    }
